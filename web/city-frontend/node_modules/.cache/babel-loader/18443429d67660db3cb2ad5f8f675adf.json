{"ast":null,"code":"var _jsxFileName = \"/Users/misterniark/Dropbox/Minimistan/Minimistan/web/city-frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport { ethers } from 'ethers';\nimport contract from './contracts/City.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst contractAddress = \"0x5FbDB2315678afecb367f032d93F642f64180aa3\";\nconst abi = contract.abi;\n\nfunction App() {\n  _s();\n\n  const [currentAccount, setCurrentAccount] = useState(null);\n\n  const checkWalletIsConnected = async () => {\n    const {\n      ethereum\n    } = window;\n\n    if (!ethereum) {\n      console.log(\"Make sure you have Metamask installed!\");\n      return;\n    } else {\n      console.log(\"Wallet exists! We're ready to go!\");\n    }\n\n    const accounts = await ethereum.request({\n      method: 'eth_accounts'\n    });\n\n    if (accounts.length !== 0) {\n      const account = accounts[0];\n      console.log(\"Found an authorized account: \", account);\n      setCurrentAccount(account);\n    } else {\n      console.log(\"No authorized account found\");\n    }\n  };\n\n  const connectWalletHandler = async () => {\n    const {\n      ethereum\n    } = window;\n\n    if (!ethereum) {\n      alert(\"Please install Metamask!\");\n    }\n\n    try {\n      const accounts = await ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n      console.log(\"Found an account! Address: \", accounts[0]);\n      setCurrentAccount(accounts[0]);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const connectWalletButton = () => {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connectWalletHandler,\n      className: \"cta-button connect-wallet-button\",\n      children: \"Connect Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  };\n\n  const mintNftButton = () => {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: mintNftHandler,\n      className: \"cta-button mint-nft-button\",\n      children: \"Mint NFT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  };\n\n  useEffect(() => {\n    checkWalletIsConnected();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Scrappy Squirrels Tutorial\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: currentAccount ? mintNftButton() : connectWalletButton()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"vg9h9hqTAVJVjklrPXRRIAqzLN0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","ethers","contract","contractAddress","abi","App","currentAccount","setCurrentAccount","checkWalletIsConnected","ethereum","window","console","log","accounts","request","method","length","account","connectWalletHandler","alert","err","connectWalletButton","mintNftButton","mintNftHandler"],"sources":["/Users/misterniark/Dropbox/Minimistan/Minimistan/web/city-frontend/src/App.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport './App.css';\n\nimport { ethers } from 'ethers';\nimport contract from './contracts/City.json';\n\nconst contractAddress = \"0x5FbDB2315678afecb367f032d93F642f64180aa3\";\nconst abi = contract.abi;\n\nfunction App() {\n\n  const [currentAccount, setCurrentAccount] = useState(null);\n\n  const checkWalletIsConnected = async () => {\n    const { ethereum } = window;\n\n    if (!ethereum) {\n      console.log(\"Make sure you have Metamask installed!\");\n      return;\n    } else {\n      console.log(\"Wallet exists! We're ready to go!\")\n    }\n\n    const accounts = await ethereum.request({ method: 'eth_accounts' });\n    if (accounts.length !== 0) {\n      const account = accounts[0];\n      console.log(\"Found an authorized account: \", account);\n      setCurrentAccount(account);\n    } else {\n      console.log(\"No authorized account found\");\n    }\n  }\n  const connectWalletHandler = async () => {\n    const { ethereum } = window;\n\n    if (!ethereum) {\n      alert(\"Please install Metamask!\");\n    }\n\n    try {\n      const accounts = await ethereum.request({ method: 'eth_requestAccounts' });\n      console.log(\"Found an account! Address: \", accounts[0]);\n      setCurrentAccount(accounts[0]);\n    } catch (err) {\n      console.log(err)\n    }\n  }\n  const connectWalletButton = () => {\n    return (\n      <button onClick={connectWalletHandler} className='cta-button connect-wallet-button'>\n        Connect Wallet\n      </button>\n    )\n  }\n\n  const mintNftButton = () => {\n    return (\n      <button onClick={mintNftHandler} className='cta-button mint-nft-button'>\n        Mint NFT\n      </button>\n    )\n  }\n\n  useEffect(() => {\n    checkWalletIsConnected();\n  }, [])\n\n  return (\n    <div className='main-app'>\n      <h1>Scrappy Squirrels Tutorial</h1>\n      <div>\n        {currentAccount ? mintNftButton() : connectWalletButton()}\n      </div>\n    </div>\n  )\n\n}\n\nexport default App;\n"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAO,WAAP;AAEA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAOC,QAAP,MAAqB,uBAArB;;AAEA,MAAMC,eAAe,GAAG,4CAAxB;AACA,MAAMC,GAAG,GAAGF,QAAQ,CAACE,GAArB;;AAEA,SAASC,GAAT,GAAe;EAAA;;EAEb,MAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCP,QAAQ,CAAC,IAAD,CAApD;;EAEA,MAAMQ,sBAAsB,GAAG,YAAY;IACzC,MAAM;MAAEC;IAAF,IAAeC,MAArB;;IAEA,IAAI,CAACD,QAAL,EAAe;MACbE,OAAO,CAACC,GAAR,CAAY,wCAAZ;MACA;IACD,CAHD,MAGO;MACLD,OAAO,CAACC,GAAR,CAAY,mCAAZ;IACD;;IAED,MAAMC,QAAQ,GAAG,MAAMJ,QAAQ,CAACK,OAAT,CAAiB;MAAEC,MAAM,EAAE;IAAV,CAAjB,CAAvB;;IACA,IAAIF,QAAQ,CAACG,MAAT,KAAoB,CAAxB,EAA2B;MACzB,MAAMC,OAAO,GAAGJ,QAAQ,CAAC,CAAD,CAAxB;MACAF,OAAO,CAACC,GAAR,CAAY,+BAAZ,EAA6CK,OAA7C;MACAV,iBAAiB,CAACU,OAAD,CAAjB;IACD,CAJD,MAIO;MACLN,OAAO,CAACC,GAAR,CAAY,6BAAZ;IACD;EACF,CAlBD;;EAmBA,MAAMM,oBAAoB,GAAG,YAAY;IACvC,MAAM;MAAET;IAAF,IAAeC,MAArB;;IAEA,IAAI,CAACD,QAAL,EAAe;MACbU,KAAK,CAAC,0BAAD,CAAL;IACD;;IAED,IAAI;MACF,MAAMN,QAAQ,GAAG,MAAMJ,QAAQ,CAACK,OAAT,CAAiB;QAAEC,MAAM,EAAE;MAAV,CAAjB,CAAvB;MACAJ,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2CC,QAAQ,CAAC,CAAD,CAAnD;MACAN,iBAAiB,CAACM,QAAQ,CAAC,CAAD,CAAT,CAAjB;IACD,CAJD,CAIE,OAAOO,GAAP,EAAY;MACZT,OAAO,CAACC,GAAR,CAAYQ,GAAZ;IACD;EACF,CAdD;;EAeA,MAAMC,mBAAmB,GAAG,MAAM;IAChC,oBACE;MAAQ,OAAO,EAAEH,oBAAjB;MAAuC,SAAS,EAAC,kCAAjD;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAKD,CAND;;EAQA,MAAMI,aAAa,GAAG,MAAM;IAC1B,oBACE;MAAQ,OAAO,EAAEC,cAAjB;MAAiC,SAAS,EAAC,4BAA3C;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAKD,CAND;;EAQAxB,SAAS,CAAC,MAAM;IACdS,sBAAsB;EACvB,CAFQ,EAEN,EAFM,CAAT;EAIA,oBACE;IAAK,SAAS,EAAC,UAAf;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA,UACGF,cAAc,GAAGgB,aAAa,EAAhB,GAAqBD,mBAAmB;IADzD;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AASD;;GAnEQhB,G;;KAAAA,G;AAqET,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}